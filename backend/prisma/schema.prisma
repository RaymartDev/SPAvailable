generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  gender     Boolean   @default(true)
  email      String    @unique @db.VarChar(50)
  contact    String?   @db.VarChar(20)
  password   String
  profile    String?    @db.MediumText
  birth_date DateTime  @db.Date
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  spa        spa[]
  active     Boolean   @default(false)
}

model spa {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  desc       String    @db.VarChar(255)
  cover_photo String?  @db.MediumText
  display_photo String? @db.MediumText
  email      String?   @db.VarChar(50)
  contact    String?   @db.VarChar(20)
  address    String?
  ownerId    Int?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  products   spa_product[]
  services   spa_service[]
  owner      user?     @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@index([ownerId], map: "spa_ownerId_fkey")
}

model spa_service {
  id Int @id @default(autoincrement())
  spaId Int
  serviceId Int
  service service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  spa spa @relation(fields: [spaId], references: [id], onDelete: Cascade)

  @@unique([spaId, serviceId], name: "Unique_Spa_Service")
}

model spa_product {
  id Int @id @default(autoincrement())
  spaId Int
  productId Int
  product product @relation(fields: [productId], references: [id], onDelete: Cascade)
  spa spa @relation(fields: [spaId], references: [id], onDelete: Cascade)

  @@unique([spaId, productId], name: "Unique_Spa_Product")
}

model service {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String?
  available   Boolean  @default(true)
  spaId       Int?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  spa_services spa_service[]

  @@index([spaId], map: "service_spaId_fkey")
}

model product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String?
  available   Boolean  @default(true)
  spaId       Int?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  spa_products spa_product[]

  @@index([spaId], map: "product_spaId_fkey")
}